server:
  port: ${PORT:8095}
  servlet:
    context-path: /api


spring:
  config:
    additional-location: ${SPRING_CONFIG_ADDITIONAL_LOCATION}
  jpa:
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate.dialect: org.hibernate.dialect.MySQLDialect
  datasource:
    url: ${DATASOURCE_URL:jdbc:mysql://localhost:3306/app_db}
    username: ${DATASOURCE_USER:user}
    password: ${DATASOURCE_PASS:password}
  rabbitmq:
    host: localhost
    port: 5672
    username: myuser
    password: mypassword

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8180/realms/parkRealm/protocol/openid-connect/certs
          issuer-uri: http://localhost:8180/realms/parkRealm


management.endpoints.web.exposure.include: '*'
management.endpoint.health.show-details: always

management.health.diskspace.enabled: false
management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: false

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10


resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 100
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
      ignoreExceptions:
        - io.github.robwin.exception.BusinessException
  instances:
    Weather:
      baseConfig: default
    Visitors:
      baseConfig: default
    Holiday:
      baseConfig: default
